from bioLibrary import *

def getStartPos(dna):
	startIndexes = []
	for i in range(0, len(dna), 1):
		dna3 = (dna[i:i+3])
		if(len(dna3) == 3):
			amino = codons[dna3]
			if(amino == "M"):
				startIndexes.append(i)
	return startIndexes

def dnaToAAUpdated(dna):
	aas = []
	startIndexes = getStartPos(dna)
	for s in range(len(startIndexes)):
		aas.append(dnaToAA(dna[startIndexes[s]:]))
	return aas

# normal
dna = "CATAGAAAGGACGGCCTTCTCGCCCCGGTTAGAGAAGTGGCCTTATAAATAGACGATGCAGATATCGCGAGCTGCCCGCTGCTAGCCAGGGATTGATTCTGTGTTGCATGGTTAACTCCTCAGATTTGCTCTGCTGTTTGGAAGCCTGGCGGCTGTGTGTTTTTTATCATGTGGATCGAGAAAGTCTTTCAACCATCAGCATGGTCCTTACGAGCATGTGGCGACTTTCGGACTACAAGGGCATGTCGCCCAACGTCTGGCTGCCCACTTCACTGATACCGTCGTTCACTTCATGCGACGTATTTACTCCAGCATGGCAATTGGATACATCGCGTTCACAAACGTTCCGTTATAGTGTCCATAGCTGTAAACCTTGCGCTCTTGTTGCGATGTCCGCCCTACCATCATGGGTGAAGGTAGCCTGCGATAGCTATCGCAGGCTACCTTCACCCATCTAACCAAGCCCACGTAAACATAGGGTTGCCCGATATGAAACTTGTCAACGAGGCTGATAAGTTCGTAGGGCACTGTAGAAATCCGTTATGGTCGCCACATGTACCTTTAATTATTTTAGTTGCCCTCAGGTAATCCTTAACCAGGGCCAAGAGCCTATTAATCCCGCGCGATGTATTACAGCCTGGTAAGCTCGCAAGCGGCTACCCGTTAAATTCGAGCGACCGATGGAATAGGTCATTCACTGCATCATTCGGGAGCAATTGCCGCTTACCCTATGTAATACAGGGCTGGATAGCAAGGTAATAATTAAACTGGGGCTGAAAGCAGCCCAATTTCACTAGAAAACGTACGGCGAACCGTCAAAACTCAGCATTCAATTCGATGCCCCCTCCAGAAAAGTTGAA"
rna = dnaToRna(dna)
aas =  dnaToAAUpdated(rna)

# reverse complement
rev = reverse(dna)
comp = complement(rev)
rna_rc = dnaToRna(comp)
aas2 = dnaToAAUpdated(rna_rc)


for a in aas:
	if (a is not None):
		print a
for a2 in aas2:
	if((a2 is not None) & (a2 not in aas)):
		print a2